import mongoose from 'mongoose';
import dotenv from 'dotenv';
import bcrypt from 'bcryptjs';

import User from '../models/User.js';
import Farmer from '../models/Farmer.js';
import Product from '../models/Product.js';
import Category from '../models/Category.js';
import PickupPoint from '../models/PickupPoint.js';
import PromoCode from '../models/PromoCode.js';

// Load environment variables
dotenv.config();

// Connect to database
const connectDB = async () => {
  try {
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', error);
    process.exit(1);
  }
};

// Sample data
const createSampleUsers = async () => {
  const users = [
    {
      firstName: '–ú–∏—Ö–∞–∏–ª',
      lastName: '–ò–≤–∞–Ω–æ–≤',
      email: 'mikhail.ivanov@example.com',
      password: await bcrypt.hash('password123', 12),
      phone: '+7-900-123-45-67',
      role: 'farmer',
      isVerified: true,
      isActive: true
    },
    {
      firstName: '–ê–Ω–Ω–∞',
      lastName: '–ü–µ—Ç—Ä–æ–≤–∞',
      email: 'anna.petrova@example.com',
      password: await bcrypt.hash('password123', 12),
      phone: '+7-900-234-56-78',
      role: 'farmer',
      isVerified: true,
      isActive: true
    },
    {
      firstName: '–°–µ—Ä–≥–µ–π',
      lastName: '–ö–æ–∑–ª–æ–≤',
      email: 'sergey.kozlov@example.com',
      password: await bcrypt.hash('password123', 12),
      phone: '+7-900-345-67-89',
      role: 'farmer',
      isVerified: true,
      isActive: true
    },
    {
      firstName: '–ï–ª–µ–Ω–∞',
      lastName: '–°–º–∏—Ä–Ω–æ–≤–∞',
      email: 'elena.smirnova@example.com',
      password: await bcrypt.hash('password123', 12),
      phone: '+7-900-456-78-90',
      role: 'customer',
      isVerified: true,
      isActive: true
    },
    {
      firstName: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      lastName: '–°–∏—Å—Ç–µ–º—ã',
      email: 'admin@fermamarket.ru',
      password: await bcrypt.hash('admin123', 12),
      phone: '+7-900-000-00-00',
      role: 'admin',
      isVerified: true,
      isActive: true
    }
  ];

  return await User.create(users);
};

const sampleCategories = [
  {
    name: '–û–≤–æ—â–∏',
    slug: 'vegetables',
    description: '–°–≤–µ–∂–∏–µ –æ–≤–æ—â–∏ —Å —Ñ–µ—Ä–º—ã',
    icon: 'ü•ï',
    level: 0,
    sortOrder: 1,
    isActive: true
  },
  {
    name: '–§—Ä—É–∫—Ç—ã',
    slug: 'fruits',
    description: '–°–µ–∑–æ–Ω–Ω—ã–µ —Ñ—Ä—É–∫—Ç—ã –∏ —è–≥–æ–¥—ã',
    icon: 'üçé',
    level: 0,
    sortOrder: 2,
    isActive: true
  },
  {
    name: '–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã',
    slug: 'dairy',
    description: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –º–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã',
    icon: 'ü•õ',
    level: 0,
    sortOrder: 3,
    isActive: true
  },
  {
    name: '–ú—ë–¥ –∏ –ø—Ä–æ–¥—É–∫—Ç—ã –ø—á–µ–ª–æ–≤–æ–¥—Å—Ç–≤–∞',
    slug: 'honey',
    description: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –º—ë–¥ –∏ –ø—Ä–æ–¥—É–∫—Ç—ã –ø—á–µ–ª–æ–≤–æ–¥—Å—Ç–≤–∞',
    icon: 'üçØ',
    level: 0,
    sortOrder: 4,
    isActive: true
  },
  {
    name: '–ó–µ–ª–µ–Ω—å –∏ —Ç—Ä–∞–≤—ã',
    slug: 'herbs',
    description: '–°–≤–µ–∂–∞—è –∑–µ–ª–µ–Ω—å –∏ –ø—Ä—è–Ω—ã–µ —Ç—Ä–∞–≤—ã',
    icon: 'üåø',
    level: 0,
    sortOrder: 5,
    isActive: true
  },
  {
    name: '–û—Ä–µ—Ö–∏',
    slug: 'nuts',
    description: '–û—Ä–µ—Ö–∏ –∏ —Å–µ–º–µ–Ω–∞',
    icon: 'ü•ú',
    level: 0,
    sortOrder: 6,
    isActive: true
  }
];

const samplePickupPoints = [
  {
    name: '–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π"',
    address: {
      street: '—É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, 15',
      city: '–ú–æ—Å–∫–≤–∞',
      region: '–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
      postalCode: '125009',
      coordinates: {
        latitude: 55.7558,
        longitude: 37.6176
      }
    },
    workingHours: {
      monday: { start: '09:00', end: '21:00' },
      tuesday: { start: '09:00', end: '21:00' },
      wednesday: { start: '09:00', end: '21:00' },
      thursday: { start: '09:00', end: '21:00' },
      friday: { start: '09:00', end: '21:00' },
      saturday: { start: '10:00', end: '20:00' },
      sunday: { start: '10:00', end: '18:00' }
    },
    contact: {
      phone: '+7-495-123-45-67',
      email: 'central@fermamarket.ru'
    },
    capacity: 200,
    facilities: ['parking', 'wheelchair_access', 'refrigeration'],
    isActive: true
  },
  {
    name: '–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ "–°–µ–≤–µ—Ä–Ω—ã–π"',
    address: {
      street: '—É–ª. –î–º–∏—Ç—Ä–æ–≤—Å–∫–æ–µ —à–æ—Å—Å–µ, 89',
      city: '–ú–æ—Å–∫–≤–∞',
      region: '–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
      postalCode: '127015',
      coordinates: {
        latitude: 55.8431,
        longitude: 37.6156
      }
    },
    workingHours: {
      monday: { start: '08:00', end: '22:00' },
      tuesday: { start: '08:00', end: '22:00' },
      wednesday: { start: '08:00', end: '22:00' },
      thursday: { start: '08:00', end: '22:00' },
      friday: { start: '08:00', end: '22:00' },
      saturday: { start: '09:00', end: '21:00' },
      sunday: { start: '09:00', end: '19:00' }
    },
    contact: {
      phone: '+7-495-234-56-78',
      email: 'north@fermamarket.ru'
    },
    capacity: 150,
    facilities: ['parking', 'refrigeration'],
    isActive: true
  }
];

const createSamplePromoCodes = (adminUserId) => [
  {
    code: 'WELCOME10',
    name: '–°–∫–∏–¥–∫–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
    description: '–°–∫–∏–¥–∫–∞ 10% –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑',
    type: 'percentage',
    value: 10,
    minOrderAmount: 1000,
    maxDiscountAmount: 500,
    usageLimit: {
      total: 1000,
      perUser: 1
    },
    validFrom: new Date(),
    validUntil: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 days
    userRestrictions: {
      newUsersOnly: true
    },
    isActive: true,
    createdBy: adminUserId
  },
  {
    code: 'ORGANIC20',
    name: '–°–∫–∏–¥–∫–∞ –Ω–∞ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã',
    description: '–°–∫–∏–¥–∫–∞ 20% –Ω–∞ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã',
    type: 'percentage',
    value: 20,
    minOrderAmount: 2000,
    maxDiscountAmount: 1000,
    usageLimit: {
      total: 500,
      perUser: 3
    },
    validFrom: new Date(),
    validUntil: new Date(Date.now() + 60 * 24 * 60 * 60 * 1000), // 60 days
    isActive: true,
    createdBy: adminUserId
  },
  {
    code: 'FREESHIP',
    name: '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞',
    description: '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 1500‚ÇΩ',
    type: 'free_shipping',
    value: 0,
    minOrderAmount: 1500,
    usageLimit: {
      total: null,
      perUser: 5
    },
    validFrom: new Date(),
    validUntil: new Date(Date.now() + 90 * 24 * 60 * 60 * 1000), // 90 days
    isActive: true,
    createdBy: adminUserId
  }
];

// Seed function
const seedDatabase = async () => {
  try {
    console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

    // Clear existing data
    await User.deleteMany({});
    await Farmer.deleteMany({});
    await Product.deleteMany({});
    await Category.deleteMany({});
    await PickupPoint.deleteMany({});
    await PromoCode.deleteMany({});
    console.log('üóëÔ∏è –û—á–∏—Å—Ç–∏–ª–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ');

    // Create users
    const users = await createSampleUsers();
    console.log('üë• –°–æ–∑–¥–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', users.length);

    // Create categories
    const categories = await Category.create(sampleCategories);
    console.log('üìÇ –°–æ–∑–¥–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', categories.length);

    // Create farmers (link to users)
    const sampleFarmers = [
      {
        user: users[0]._id,
        farmName: '–≠–∫–æ-—Ñ–µ—Ä–º–∞ –ò–≤–∞–Ω–æ–≤–∞',
        description: '–°–µ–º–µ–π–Ω–∞—è —Ñ–µ—Ä–º–∞, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∞—è—Å—è –Ω–∞ –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏–∏ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏—Ö –æ–≤–æ—â–µ–π –∏ –∑–µ–ª–µ–Ω–∏.',
        specialties: ['vegetables', 'herbs'],
        isOrganic: true,
        isVerified: true,
        farmLocation: {
          address: '–¥. –ó–µ–ª–µ–Ω–∞—è, —É–ª. –ü–æ–ª–µ–≤–∞—è, 15',
          city: '–ü–æ–¥–æ–ª—å—Å–∫',
          region: '–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
          coordinates: {
            latitude: 55.4319,
            longitude: 37.5447
          }
        },
        deliveryRadius: 50,
        rating: {
          average: 4.9,
          count: 127
        },
        totalSales: 1250000
      },
      {
        user: users[1]._id,
        farmName: '–ú–æ–ª–æ—á–Ω–∞—è —Ñ–µ—Ä–º–∞ –ü–µ—Ç—Ä–æ–≤—ã—Ö',
        description: '–ü—Ä–æ–∏–∑–≤–æ–¥–∏–º –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –º–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∏ –º—ë–¥.',
        specialties: ['dairy', 'honey'],
        isOrganic: true,
        isVerified: true,
        farmLocation: {
          address: '—Å. –ú–æ–ª–æ—á–Ω–æ–µ, —É–ª. –§–µ—Ä–º–µ—Ä—Å–∫–∞—è, 8',
          city: '–¢—É–ª–∞',
          region: '–¢—É–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
          coordinates: {
            latitude: 54.1961,
            longitude: 37.6182
          }
        },
        deliveryRadius: 40,
        rating: {
          average: 4.8,
          count: 89
        },
        totalSales: 980000
      },
      {
        user: users[2]._id,
        farmName: '–§—Ä—É–∫—Ç–æ–≤—ã–π —Å–∞–¥ –ö–æ–∑–ª–æ–≤–∞',
        description: '–í—ã—Ä–∞—â–∏–≤–∞–µ–º —Å–µ–∑–æ–Ω–Ω—ã–µ —Ñ—Ä—É–∫—Ç—ã, –æ—Ä–µ—Ö–∏ –∏ –¥–µ–ª–∞–µ–º –¥–æ–º–∞—à–Ω–∏–µ –∫–æ–Ω—Å–µ—Ä–≤—ã.',
        specialties: ['fruits', 'nuts'],
        isOrganic: false,
        isVerified: true,
        farmLocation: {
          address: '–¥. –°–∞–¥–æ–≤–∞—è, —É–ª. –Ø–±–ª–æ–Ω–µ–≤–∞—è, 22',
          city: '–ö–∞–ª—É–≥–∞',
          region: '–ö–∞–ª—É–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
          coordinates: {
            latitude: 54.5293,
            longitude: 36.2754
          }
        },
        deliveryRadius: 60,
        rating: {
          average: 4.7,
          count: 156
        },
        totalSales: 750000
      }
    ];

    const farmers = await Farmer.create(sampleFarmers);
    console.log('üöú –°–æ–∑–¥–∞–ª–∏ —Ñ–µ—Ä–º–µ—Ä–æ–≤:', farmers.length);

    // Create pickup points
    const pickupPoints = await PickupPoint.create(samplePickupPoints);
    console.log('üìç –°–æ–∑–¥–∞–ª–∏ —Ç–æ—á–∫–∏ –≤—ã–¥–∞—á–∏:', pickupPoints.length);

    // Create promo codes
    const promoCodesData = createSamplePromoCodes(users[4]._id); // Admin user
    const promoCodes = await PromoCode.create(promoCodesData);
    console.log('üé´ –°–æ–∑–¥–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥—ã:', promoCodes.length);

    // Create sample products
    const sampleProducts = [
      {
        name: '–ü–æ–º–∏–¥–æ—Ä—ã —á–µ—Ä—Ä–∏',
        description: '–°–ª–∞–¥–∫–∏–µ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–µ –ø–æ–º–∏–¥–æ—Ä—ã —á–µ—Ä—Ä–∏, –≤—ã—Ä–∞—â–µ–Ω–Ω—ã–µ –≤ —Ç–µ–ø–ª–∏—Ü–µ.',
        farmer: farmers[0]._id,
        category: categories[0]._id, // –û–≤–æ—â–∏
        price: { amount: 350, unit: 'kg' },
        images: [{
          url: 'https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=400&h=300&fit=crop',
          alt: '–ü–æ–º–∏–¥–æ—Ä—ã —á–µ—Ä—Ä–∏',
          isPrimary: true
        }],
        availability: { inStock: true, quantity: 50 },
        characteristics: { isOrganic: true, isLocal: true, isGMOFree: true },
        rating: { average: 4.9, count: 45 },
        totalSold: 120,
        tags: ['–æ—Ä–≥–∞–Ω–∏–∫', '—Å–≤–µ–∂–∏–µ', '–º–µ—Å—Ç–Ω—ã–µ']
      },
      {
        name: '–ú–æ–ª–æ–∫–æ –∫–æ—Ä–æ–≤—å–µ',
        description: '–°–≤–µ–∂–µ–µ —Ü–µ–ª—å–Ω–æ–µ –º–æ–ª–æ–∫–æ –æ—Ç –∫–æ—Ä–æ–≤, –ø–∞—Å—É—â–∏—Ö—Å—è –Ω–∞ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —á–∏—Å—Ç—ã—Ö –ª—É–≥–∞—Ö.',
        farmer: farmers[1]._id,
        category: categories[2]._id, // –ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
        price: { amount: 80, unit: 'l' },
        images: [{
          url: 'https://images.unsplash.com/photo-1550583724-b2692b85b150?w=400&h=300&fit=crop',
          alt: '–ú–æ–ª–æ–∫–æ –∫–æ—Ä–æ–≤—å–µ',
          isPrimary: true
        }],
        availability: { inStock: true, quantity: 100 },
        characteristics: { isOrganic: true, isLocal: true, isGMOFree: true },
        rating: { average: 4.9, count: 78 },
        totalSold: 450,
        tags: ['–æ—Ä–≥–∞–Ω–∏–∫', '—Å–≤–µ–∂–µ–µ', '–Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ']
      },
      {
        name: '–Ø–±–ª–æ–∫–∏ –ê–Ω—Ç–æ–Ω–æ–≤–∫–∞',
        description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Ä—É—Å—Å–∫–∏–µ —è–±–ª–æ–∫–∏ —Å–æ—Ä—Ç–∞ –ê–Ω—Ç–æ–Ω–æ–≤–∫–∞.',
        farmer: farmers[2]._id,
        category: categories[1]._id, // –§—Ä—É–∫—Ç—ã
        price: { amount: 120, unit: 'kg' },
        images: [{
          url: 'https://images.unsplash.com/photo-1560806887-1e4cd0b6cbd6?w=400&h=300&fit=crop',
          alt: '–Ø–±–ª–æ–∫–∏ –ê–Ω—Ç–æ–Ω–æ–≤–∫–∞',
          isPrimary: true
        }],
        availability: { inStock: true, quantity: 200 },
        seasonality: { isSeasonalProduct: true, availableMonths: [8, 9, 10, 11, 12, 1, 2] },
        characteristics: { isOrganic: false, isLocal: true, isGMOFree: true },
        rating: { average: 4.6, count: 89 },
        totalSold: 340,
        tags: ['—Å–µ–∑–æ–Ω–Ω—ã–µ', '–∞–Ω—Ç–æ–Ω–æ–≤–∫–∞', '—Ä—É—Å—Å–∫–∏–µ']
      }
    ];

    const products = await Product.create(sampleProducts);
    console.log('ü•ï –°–æ–∑–¥–∞–ª–∏ –ø—Ä–æ–¥—É–∫—Ç—ã:', products.length);

    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!');
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`);
    console.log(`- –ö–∞—Ç–µ–≥–æ—Ä–∏–π: ${categories.length}`);
    console.log(`- –§–µ—Ä–º–µ—Ä–æ–≤: ${farmers.length}`);
    console.log(`- –ü—Ä–æ–¥—É–∫—Ç–æ–≤: ${products.length}`);
    console.log(`- –¢–æ—á–µ–∫ –≤—ã–¥–∞—á–∏: ${pickupPoints.length}`);
    console.log(`- –ü—Ä–æ–º–æ–∫–æ–¥–æ–≤: ${promoCodes.length}`);

    console.log('\nüîê –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:');
    console.log('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:');
    console.log('- admin@fermamarket.ru / admin123');
    console.log('–§–µ—Ä–º–µ—Ä—ã:');
    console.log('- mikhail.ivanov@example.com / password123');
    console.log('- anna.petrova@example.com / password123');
    console.log('- sergey.kozlov@example.com / password123');
    console.log('–ü–æ–∫—É–ø–∞—Ç–µ–ª—å:');
    console.log('- elena.smirnova@example.com / password123');

    console.log('\nüé´ –ü—Ä–æ–º–æ–∫–æ–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log('- WELCOME10 (10% —Å–∫–∏–¥–∫–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)');
    console.log('- ORGANIC20 (20% —Å–∫–∏–¥–∫–∞ –Ω–∞ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã)');
    console.log('- FREESHIP (–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –æ—Ç 1500‚ÇΩ)');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    mongoose.connection.close();
    console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');
  }
};

// Run seeding
connectDB().then(seedDatabase);