import mongoose from 'mongoose';
import dotenv from 'dotenv';

import User from '../models/User.js';
import Farmer from '../models/Farmer.js';
import Product from '../models/Product.js';
import Order from '../models/Order.js';
import Review from '../models/Review.js';
import PickupPoint from '../models/PickupPoint.js';

// Load environment variables
dotenv.config();

// Connect to database
const connectDB = async () => {
  try {
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', error);
    process.exit(1);
  }
};

// Clear database
const clearDatabase = async () => {
  try {
    console.log('üóëÔ∏è –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

    // Clear all collections
    await User.deleteMany({});
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–¥–∞–ª–µ–Ω—ã');

    await Farmer.deleteMany({});
    console.log('‚úÖ –§–µ—Ä–º–µ—Ä—ã —É–¥–∞–ª–µ–Ω—ã');

    await Product.deleteMany({});
    console.log('‚úÖ –ü—Ä–æ–¥—É–∫—Ç—ã —É–¥–∞–ª–µ–Ω—ã');

    await Order.deleteMany({});
    console.log('‚úÖ –ó–∞–∫–∞–∑—ã —É–¥–∞–ª–µ–Ω—ã');

    await Review.deleteMany({});
    console.log('‚úÖ –û—Ç–∑—ã–≤—ã —É–¥–∞–ª–µ–Ω—ã');

    await PickupPoint.deleteMany({});
    console.log('‚úÖ –¢–æ—á–∫–∏ –≤—ã–¥–∞—á–∏ —É–¥–∞–ª–µ–Ω—ã');

    console.log('üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    mongoose.connection.close();
    console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');
  }
};

// Run clearing
connectDB().then(clearDatabase);